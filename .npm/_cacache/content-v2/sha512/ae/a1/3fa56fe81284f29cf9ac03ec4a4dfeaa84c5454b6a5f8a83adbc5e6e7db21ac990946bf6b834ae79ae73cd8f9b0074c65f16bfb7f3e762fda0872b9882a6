{"_id":"discord-mongoose-economy","_rev":"2-399581d1aafeafc01303beb27be868df","name":"discord-mongoose-economy","dist-tags":{"latest":"1.2.0"},"versions":{"1.0.0":{"name":"discord-mongoose-economy","version":"1.0.0","description":"Very Simple, and Fast Mongoose Economy System","main":"index.js","dependencies":{"mongoose":"^5.10.11"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["mongoose","discord","economy","money"],"author":{"name":"Shuncey Balba"},"license":"ISC","_id":"discord-mongoose-economy@1.0.0","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-/gqUk/PvKpOdF2dwdySnZIVeO+7eaa7vrZOh7qwYfK4CwUkpcterxoUMZl3TGo47Pzo0xP88UXMWsPPpft/XQA==","shasum":"7472c21f38f4d4307f9e1373cda564bb49f5b1db","tarball":"https://registry.npmjs.org/discord-mongoose-economy/-/discord-mongoose-economy-1.0.0.tgz","fileCount":4,"unpackedSize":17887,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfoilDCRA9TVsSAnZWagAAyBYP/iaz2MevU2TmUPuVfmig\nRgkwXgGVGQvM69LJm9n1tRRaCMu144TCYPpxVTbflD/V0RRsgCjAV04yDnLF\nEhyTEjRDAoYzFAiWuxrlkVW0LgHkKMsRyc2VuyN5u5ZaaFrFJhwFgqF7lUtu\nb74lwrxTMmb7WI3lnVQzaw4mdOhF51j7+I0xc3UfedNt7k5h7tu4vYvqy3xg\nCajskcoXzN0iL4xplObZEIe9cikIbP8isufRmXHLN5zvR8kjvnGW4DH+T1ja\nobZgfT22AaXP9PjvTA6LuYR9idMoQJ6mpdDJC3bWQfeql2cVMT2dYrFg2Nq7\ntAwXDvP3S81MDoeCrp151xjwiXjy7UGAVNPiBrsDNLB6sZSeFBgth9bgSBwQ\nbBwc3tUJRBglTHkID4N1sjlwyONoPixC2yqqMo1GbuWtsIDdWO1mGuzyfLS4\nhNNyOgNzf52WIK2poQCNXILeQE4AxdkvZZLsazAABgLaFjKtH7MRuIP0/qoi\nbMVreURKJkTHXN2JibF/ykyfN/HpJ9UNi5djG8rFmtQR/7T5BMbkUAY3SOqI\ndIDo3smELe5Em52F1SW89JvNp22i9Vr4eUr61nSu1DJ0ZNKp5zRFKktd0uv1\n3SU8KEjOPuQ97Rs9+pIvCl3/NhsHDS/m9aFVgE8HAF6B/ftoLM7EqHKfpsQs\nCuw1\r\n=ToVO\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCClE/0XEHxPXJG9JsQzQvg6Do0fsMgu0Gk5ODqO0Vf+QIgHh/5LBcmn0cmcGSMWLcMI1d6ITWvgWwbetHBXcJINxw="}]},"_npmUser":{"name":"shunceybalba","email":"shunceyb@gmail.com"},"directories":{},"maintainers":[{"name":"shunceybalba","email":"shunceyb@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/discord-mongoose-economy_1.0.0_1604462915116_0.3056428521827954"},"_hasShrinkwrap":false},"1.2.0":{"_from":"discord-mongoose-economy","_id":"discord-mongoose-economy@1.2.0","_inBundle":false,"_integrity":"sha512-/gqUk/PvKpOdF2dwdySnZIVeO+7eaa7vrZOh7qwYfK4CwUkpcterxoUMZl3TGo47Pzo0xP88UXMWsPPpft/XQA==","_location":"/discord-mongoose-economy","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"discord-mongoose-economy","name":"discord-mongoose-economy","escapedName":"discord-mongoose-economy","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/discord-mongoose-economy/-/discord-mongoose-economy-1.0.0.tgz","_shasum":"7472c21f38f4d4307f9e1373cda564bb49f5b1db","_spec":"discord-mongoose-economy","_where":"C:\\Users\\Shuncey Balba\\shuncey","author":{"name":"Shuncey Balba"},"dependencies":{"mongoose":"^5.10.11"},"deprecated":false,"description":"Very Simple, and Fast Mongoose Economy System","keywords":["mongoose","discord","economy","money"],"license":"ISC","main":"index.js","name":"discord-mongoose-economy","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"version":"1.2.0","_nodeVersion":"14.15.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-s2H/TMPDE+MGigWFsz2bcrQakUQ5T3XrNfGGfEVYexGLYo1Qyk/urSJMo3T48Cpj5ApkgudGTxBWvI39HfHFZg==","shasum":"6025f20161fe7c03591142642ae58ced0e3f6a55","tarball":"https://registry.npmjs.org/discord-mongoose-economy/-/discord-mongoose-economy-1.2.0.tgz","fileCount":4,"unpackedSize":18803,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqSYYCRA9TVsSAnZWagAAyaIP/ibr5HkRW3+NHf4ydrOe\n1oudO9fib0/eEB3kdVFCY5kZ2aCgPjpOzIAda12/LglpnRSOSiecqi3BM8JK\n+WQjBx7sBF6BW26tN1QlgMETzl+SyMnhsII2XdYs1y6QtNyWEWmfQRoSBpWC\nS+7I+5FyMNcHH2EoJFc5Chr1WdhBwbqAwUjMxr8elEGXDiCXrtRdhT1aJOiA\nsrdODtKWSYiVHsQJ7UoTeD2hOnXlRVNLOMVcRDDLt6AXt+/KUWcVG4WFuihx\nKaljaDByMJPs5FRITUfYiX8ArfOW/S9FKBCSGagxTJJ1vSxCXgagLt3MU0AQ\n5FlXzCIUzdVcuImzUsaR+WU8/ogCdgzIm+pRW3UUQWKXEGM6zyST9jS145l9\nMQmodUnJLSLlXqGzCADq6pwS381kEnF87wb9wxlUmEOGa8YMFNK9XwKR2bLT\neJSrrk6IYFSd5ete2M3vpSOHrC2Rvyx9A/BeyWljOx3zAPtil/wjiJwk5hTW\nzFU65TPEimIAtmyLkLhPA1073ouAeB+TR3WEGIhb7lZKrKJ5t1eRgoHu2cF6\nrMxMuEmJCViPlcVt/T3sD3HSw3XM9el79BvrJaZ1oGE+PUUgThlt9hq4IRD6\nqTd9FfwSosyQhut/Ub9bOtsMaaJ5/++ueT4jOGoR9HVlmqQ3f/DJD2DwJDQ+\n/Vmr\r\n=mWI4\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDmNZvZSgVF7T+9ycZN+Ph3ZVKQyzGkRmwKaKYYx7eEDAIgZiHSzA1Q+0P1EimogGp9VqTdG1akkEWrl/xnRh8GSFo="}]},"_npmUser":{"name":"shunceybalba","email":"shunceyb@gmail.com"},"directories":{},"maintainers":[{"name":"shunceybalba","email":"shunceyb@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/discord-mongoose-economy_1.2.0_1604920856212_0.37697724304663627"},"_hasShrinkwrap":false}},"time":{"created":"2020-11-04T04:08:35.116Z","1.0.0":"2020-11-04T04:08:35.228Z","modified":"2022-04-28T21:38:19.726Z","1.2.0":"2020-11-09T11:20:56.357Z"},"maintainers":[{"name":"shunceybalba","email":"shunceyb@gmail.com"}],"description":"Very Simple, and Fast Mongoose Economy System","keywords":["mongoose","discord","economy","money"],"author":{"name":"Shuncey Balba"},"license":"ISC","readme":"## Installation\n```bash\nnpm i discord-mongoose-economy\n```\n## Connect to MongoDB\n```javascript\nconst eco = require('discord-mongoose-economy');\n\neco.connect('mongodb://localhost/database'); //MongoDB Connection String(You also need to specify database)\n```\n\n## Balance Command\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"balance\"){\nconst balance = await eco.balance(message.author.id, message.guild.id); //Returns wallet, bank, and bankCapacity. Also creates a USer if it doesn't exist.\nmessage.channel.send(`Wallet: ${balance.wallet}\\nBank: ${balance.bank}/${balance.bankCapacity}`);\n}\n```\n## Give User Random Balance/Message\n```javascript\nconst eco = require('discord-mongoose-economy');\nconst min = 10; //Minimum of 10\nconst max = 100; //Maximum of 100\nconst random = Math.floor(Math.random() * (max - min + 1) ) + min; //Number Generator, no need to touch as we already have min, max constant above.\n\nclient.on('message', async(message) => { //Make sure Event Listener is Asynchrononous\nif(message.author.bot) return;\nawait eco.give(message.author.id, message.guild.id, random); // Make Sure this Code is under Message Event Listener\n})\n```\n## Give Balance To User\n```javascript\n//When you're using this Library, I assume you already know how to handle Arguments.\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"give\"){ //give @shuncey 1000\n    if(!message.mentions.users.first()) return message.reply(`please mention a user.`);\n    if(!args[2]) return message.reply('please specify an amount.');\n    const give = await eco.give(message.mentions.users.first().id, message.guild.id, args[2]); //Creates a new entry in the DB if User doesn't Exist.\n    message.reply(`I gave ${message.mentions.users.first()} ${give.amount}`);\n}\n```\n## Deduct User Balance\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"deduct\"){ //deduct @shuncey 1000\n    if(!message.mentions.users.first()) return message.reply(`please mention a user.`);\n    if(!args[2]) return message.reply('please specify an amount.');\n    const deduct = await eco.deduct(message.mentions.users.first().id, message.guild.id, args[2]); //Creates a new entry in the DB if User doesn't Exist.\n    message.reply(`I deducted ${deduct.amount} from ${message.mentions.users.first()} wallet.`);\n}\n```\n## Give User More Bank Capacity\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"givebankcap\"){\n    if(!message.mentions.users.first()) return message.reply(`please mention a user.`);\n    if(!args[2]) return message.reply('please specify an amount to add to bank space.');\n    const add = eco.giveCapacity(message.mentions.users.first().id, message.guild.id, args[2]); //If the user doesn't exist in the Database, it makes one. Bank Capacity Will Be 2500(Default)+Amount you specified.\n}\n```\n## Create User\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"create\"){\n    if(!message.mentions.users.first()) return message.reply(`Please mention a user.`);\n    const create = await eco.create(message.mentions.users.first().id, message.guild.id);\n    if(create.exists) return message.reply('Use already exists'); //exists[boolean] whether the user exists in the database. if it does, return.\n    message.reply(`Added ${message.mentions.users.first()} to the database`);\n}\n```\n## Delete User\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"delete\"){\n    if(!message.mentions.users.first()) return message.reply(`Please mention a user.`);\n    const delete = await eco.create(message.mentions.users.first().id, message.guild.id);\n    if(!delete.exists) return message.reply('User doesn\\'t exist'); //exists[boolean] whether the user exist in the database or not. in this case we are checking if user exists(exists === true), if it does exists.\n    message.reply(`Removed ${message.mentions.users.first()} to the database`);\n}\n```\n## Create Leaderboard\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"leaderboard\"){\n        const lb = await eco.lb(message.guild.id, 10); //(guildID, limit)\n        if(lb < 1) return message.reply('less than 1'); //If leaderboard is empty, reply to user that it is.\n        var index = 0;\n        const mapped = lb.map(i => `**${index+=1}. ${client.users.cache.get(i.userID).tag} - ${i.wallet}**`);\n        const lbembed = new discord.MessageEmbed()\n        .setTitle(`${message.guild.name}\\'s Leaderboard`)\n        .setDescription(`${mapped.join('\\n')}`)\n        .setColor(\"RANDOM\");\n        message.channel.send(lbembed);\n    }\n```\n## Daily Command\n```javascript \nconst eco = const eco = require('discord-mongoose-economy');\n\nif(msg === \"daily\"){\n    const daily  = await eco.daily(message.author.id, message.guild.id, 500); //give 500 for daily, can be changed\n    if(daily.cd) return message.reply(`Daily on cooldown come back in ${daily.cdL}`); //cdL is already formatted cooldown Left\n    message.reply(`you claimed ${daily.amount} for daily`);\n}\n```\n## Deposit and Withdraw\n```javascript\nconst eco = require('discord-mongoose-economy');\n\nif(msg === \"deposit\"){\n    if(args[1] !== \"all\" && isNaN(args[1])) return message.reply('not valid'); //deposit only accepts integers or string \"all\" which deposits all from the users wallet.\n    const deposit = await eco.deposit(message.author.id, message.guild.id, args[1]);\n    if(deposit.noten) return message.reply('You can\\'t deposit what you don\\'t have.'); //if user states more than whats in his wallet\n    message.reply(`Deposited ${deposit.amount} to your bank.`)\n}\nif(msg === \"withdraw\"){\n    if(args[1] !== \"all\" && isNaN(args[1])) return message.reply('not valid'); //withdraw only accepts integers or string \"all\" which deposits all from the users wallet.\n    const withdraw = await eco.withdraw(message.author.id, message.guild.id, args[1]);\n    if(withdraw.noten) return message.reply('You can\\'t withdraw what you don\\'t have.');  //if user tries withdraw more than whats in their wallet\n    message.reply(`${withdraw.amount}`);\n}\n```","readmeFilename":"README.MD"}